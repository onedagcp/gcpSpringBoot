buildscript {
    ext {
        kotlinVersion = "1.2.31"
        springBootVersion = "2.0.2.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "kotlin-kapt"
apply plugin: 'project-report'

group = "com.example"
version = "0.0.3-SNAPSHOT"
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileJava {
    options.compilerArgs << "-Xlint:unchecked,deprecation"
}
compileTestJava {
    options.compilerArgs << "-Xlint:unchecked,deprecation"
}

// compileJava.dependsOn(processResources)

repositories {
    mavenCentral()
}

dependencies {
    // for web
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    // for db
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    runtimeOnly("mysql:mysql-connector-java")
    // implementation("javax.xml.bind:jaxb-api:2.1")
    // kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    // for dev
    kapt("org.springframework.boot:spring-boot-configuration-processor")
    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    runtimeOnly("org.springframework.boot:spring-boot-devtools")
    // for test
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("com.h2database:h2")
}

jar {
    archiveName = 'demo'
}

springBoot {
    buildInfo()
}

bootRun {
    jvmArgs += ["-Dspring.profiles.active=dev"]
}

dependencyReport {
    println "dependency report output to '$projectDir'."
    outputFile = file(new File(projectDir, 'dependencies.txt'))
    configuration = 'default'
}

assemble.dependsOn(dependencyReport)